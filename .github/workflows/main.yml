name: Build and release
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
env:
  DEBIAN_FRONTEND: noninteractive
jobs:
  luacheck:
    name: Check code style (Lua)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install additional packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: lua-check
          version: 1.0
      - name: Install TeX Live
        uses: zauguin/install-texlive@v4
        with:
          packages: |
            l3build
      - name: Install file "l3obsolete.txt"
        run: tlmgr install --reinstall --with-doc l3kernel
      - name: Generate file "explcheck-obsolete.lua"
        run: l3build tag
      - name: Run luacheck
        run: |
          find explcheck -type f -follow -name '*.lua' -not -name 'build.lua' -not -name 'explcheck-toml.lua' -exec \
            luacheck {} +
  explcheck:
    name: Check code style (expl3)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install TeX Live
        uses: zauguin/install-texlive@v4
        with:
          packages: |
            l3build
            luatex
      - name: Install file "l3obsolete.txt"
        run: tlmgr install --reinstall --with-doc l3kernel
      - name: Generate file "explcheck-obsolete.lua"
        run: l3build tag
      - name: Run explcheck
        run: |
          set -e
          export LUAINPUTS=explcheck/src
          find */support -type f '(' -name '*.tex' -o -name '*.sty' -o -name '*.cls' ')' -exec \
            texlua explcheck/src/explcheck.lua {} +
  shellcheck:
    name: Check code style (Bash)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@2.0.0
  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install TeX Live
        uses: zauguin/install-texlive@v4
        with:
          packages: |
            l3build
      - name: Install file "l3obsolete.txt"
        run: tlmgr install --reinstall --with-doc l3kernel
      - name: Run unit tests
        run: |
          l3build check
  regression-tests:
    name: Run regression tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        release:
          - 2013
          - 2014
          - 2015
          - 2016
          - 2017
          - 2018
          - 2019
          - 2020
          - 2021
          - 2022
          - 2023
          - 2024
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install TeX Live
        uses: zauguin/install-texlive@v4
        with:
          packages: |
            l3build
            luatex
          texlive_version: ${{ matrix.release }}
      - name: Install file "l3obsolete.txt"
        run: tlmgr install --reinstall --with-doc l3kernel
      - name: Generate file "explcheck-obsolete.lua"
        run: l3build tag
      - name: Run explcheck
        run: |
          set -e
          # Collect the full list of issues.
          export LUAINPUTS=explcheck/src
          find texlive/ -type f -iregex '.*\.\(tex\|cls\|opt\|sty\)$' -exec \
            sh -c '
              texlua explcheck/src/explcheck.lua --porcelain --error-format="%f %t%n" -- "$@" || true
            ' sh {} + > issues-full.txt
          # Display any potential exceptions.
          if grep -v '^/' issues-full.txt
          then
            exit 1
          fi
          # Compress the issues.
          sed 's#^.*/##' issues-full.txt | sort -u | awk '{
            filename = $1
            issue = $2
            if (!(filename in seen_filenames)) {
              filenames[++n] = filename
              seen_filenames[filename] = 1
              issues[filename] = issue
            } else {
              issues[filename] = issues[filename] "," issue
            }
          }
          END {
            for (i = 1; i <= n; i++) {
              filename = filenames[i]
              print filename, issues[filename]
            }
          }' > issues.txt
      - name: Upload issues
        uses: actions/upload-artifact@v4
        with:
          name: TL${{ matrix.release }} issues
          path: |
            issues.txt
      - name: Compare issues
        run: diff explcheck/testfiles/${{ matrix.release }}-issues.txt issues.txt
  artifacts:
    name: Build and publish artifacts
    needs: [luacheck, explcheck, shellcheck, unit-tests, regression-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install additional packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: parallel
          version: 1.0
      - name: Install TeX Live
        uses: zauguin/install-texlive@v4
        with:
          packages: |
            scheme-basic
            l3build
          package_file: explcheck/support/DEPENDS.txt
      - name: Install file "l3obsolete.txt"
        run: tlmgr install --reinstall --with-doc l3kernel
      - name: Build CTAN archive and documentation
        run: |
          set -e
          l3build tag
          l3build ctan
      - name: Upload CTAN archive
        uses: actions/upload-artifact@v4
        with:
          name: CTAN archive
          path: |
            build/distrib/ctan/expltools-ctan.zip
      - name: Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: Documentation
          path: |
            build/doc/*.pdf
  docker-image:
    name: Build and publish Docker image
    needs: artifacts
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install TeX Live
        uses: zauguin/install-texlive@v4
        with:
          packages: |
            l3build
      - name: Install file "l3obsolete.txt"
        run: tlmgr install --reinstall --with-doc l3kernel
      - name: Build and publish Docker image
        run: |
          set -e
          l3build tag
          docker build -f explcheck/Dockerfile -t ghcr.io/witiko/expltools/explcheck .
      - name: Login to GitHub Packages
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Docker image
        if: github.ref == 'refs/heads/main'
        run: docker push ghcr.io/witiko/expltools/explcheck
  prerelease:
    name: Publish prerelease
    if: github.ref == 'refs/heads/main'
    needs: artifacts
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download CTAN archive and documentation
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - name: Publish prerelease
        uses: marvinpinto/action-automatic-releases@latest
        with:
          title: The latest version
          automatic_release_tag: latest
          prerelease: true
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            expltools-ctan.zip
            *.pdf
